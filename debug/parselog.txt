   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(DEF,'def',16,0)
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 2
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : new_scope . LexToken(DEF,'def',16,0)
   yacc.py: 445:Action : Shift and goto state 25
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 434:Stack  : new_scope DEF . LexToken(IDENT,'main',16,4)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 430:Defaulted state 60: Reduce using 1
   yacc.py: 434:Stack  : new_scope DEF IDENT . None
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 101
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope . LexToken(LPAREN,'(',16,8)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN . LexToken(RPAREN,')',16,9)
   yacc.py: 473:Action : Reduce rule [paramlist -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <dict @ 0x22f986efa80> ({'dim': 0})
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist . LexToken(RPAREN,')',16,9)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN . LexToken(LBRACE,'{',16,11)
   yacc.py: 445:Action : Shift and goto state 180
   yacc.py: 410:
   yacc.py: 411:State  : 180
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE . LexToken(INT,'int',17,17)
   yacc.py: 445:Action : Shift and goto state 6
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE INT . LexToken(IDENT,'i',17,21)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE INT IDENT . LexToken(SEMICOLON,';',17,22)
   yacc.py: 445:Action : Shift and goto state 65
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE INT IDENT SEMICOLON . LexToken(INT,'int',18,28)
   yacc.py: 469:Action : Reduce rule [statement2 -> SEMICOLON] with [';'] and goto state 63
   yacc.py: 506:Result : <dict @ 0x22f986efd80> ({'dim': 0, 'sizes': []})
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE INT IDENT statement2 . LexToken(INT,'int',18,28)
   yacc.py: 469:Action : Reduce rule [statement -> INT IDENT statement2] with ['int','i',<dict @ 0x22f986efd80>] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement . LexToken(INT,'int',18,28)
   yacc.py: 445:Action : Shift and goto state 6
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT . LexToken(IDENT,'a',18,32)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT . LexToken(LBRACKET,'[',18,33)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT LBRACKET . LexToken(int_constant,'3',18,34)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT LBRACKET int_constant . LexToken(RBRACKET,']',18,35)
   yacc.py: 469:Action : Reduce rule [factor -> int_constant] with ['3'] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f986ef400> ({'node': Node(value='3', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT LBRACKET factor . LexToken(RBRACKET,']',18,35)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f986ef400>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f986ef400> ({'node': Node(value='3', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT LBRACKET unaryexpr . LexToken(RBRACKET,']',18,35)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT LBRACKET unaryexpr term1 . LexToken(RBRACKET,']',18,35)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f986ef400>,None] and goto state 42
   yacc.py: 506:Result : <dict @ 0x22f986ef400> ({'node': Node(value='3', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT LBRACKET term . LexToken(RBRACKET,']',18,35)
   yacc.py: 473:Action : Reduce rule [numexpression1 -> <empty>] with [] and goto state 86
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT LBRACKET term numexpression1 . LexToken(RBRACKET,']',18,35)
   yacc.py: 469:Action : Reduce rule [numexpression -> term numexpression1] with [<dict @ 0x22f986ef400>,None] and goto state 105
   yacc.py: 506:Result : <dict @ 0x22f986ef400> ({'node': Node(value='3', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT LBRACKET numexpression . LexToken(RBRACKET,']',18,35)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT LBRACKET numexpression RBRACKET . LexToken(SEMICOLON,';',18,36)
   yacc.py: 473:Action : Reduce rule [lvalue1 -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <dict @ 0x22f986eb380> ({'dim': 0, 'sizes': [], 'expression': '' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT LBRACKET numexpression RBRACKET lvalue1 . LexToken(SEMICOLON,';',18,36)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT LBRACKET numexpression RBRACKET lvalue1 SEMICOLON . LexToken(INT,'int',19,42)
   yacc.py: 469:Action : Reduce rule [statement2 -> LBRACKET numexpression RBRACKET lvalue1 SEMICOLON] with ['[',<dict @ 0x22f986ef400>,']',<dict @ 0x22f986eb380>,';'] and goto state 63
   yacc.py: 506:Result : <dict @ 0x22f986eb540> ({'dim': 1, 'sizes': ['3']})
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement INT IDENT statement2 . LexToken(INT,'int',19,42)
   yacc.py: 469:Action : Reduce rule [statement -> INT IDENT statement2] with ['int','a',<dict @ 0x22f986eb540>] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement . LexToken(INT,'int',19,42)
   yacc.py: 445:Action : Shift and goto state 6
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement INT . LexToken(IDENT,'b',19,46)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement INT IDENT . LexToken(SEMICOLON,';',19,47)
   yacc.py: 445:Action : Shift and goto state 65
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement INT IDENT SEMICOLON . LexToken(FOR,'for',20,53)
   yacc.py: 469:Action : Reduce rule [statement2 -> SEMICOLON] with [';'] and goto state 63
   yacc.py: 506:Result : <dict @ 0x22f986ef0c0> ({'dim': 0, 'sizes': []})
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement INT IDENT statement2 . LexToken(FOR,'for',20,53)
   yacc.py: 469:Action : Reduce rule [statement -> INT IDENT statement2] with ['int','b',<dict @ 0x22f986ef0c0>] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement . LexToken(FOR,'for',20,53)
   yacc.py: 445:Action : Shift and goto state 23
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR . LexToken(LPAREN,'(',20,56)
   yacc.py: 445:Action : Shift and goto state 58
   yacc.py: 410:
   yacc.py: 411:State  : 58
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN . LexToken(IDENT,'i',20,57)
   yacc.py: 445:Action : Shift and goto state 99
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT . LexToken(ASSIGN,'=',20,59)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT ASSIGN . LexToken(int_constant,'0',20,61)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT ASSIGN int_constant . LexToken(SEMICOLON,';',20,62)
   yacc.py: 469:Action : Reduce rule [factor -> int_constant] with ['0'] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f986ef6c0> ({'node': Node(value='0', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT ASSIGN factor . LexToken(SEMICOLON,';',20,62)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f986ef6c0>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f986ef6c0> ({'node': Node(value='0', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT ASSIGN unaryexpr . LexToken(SEMICOLON,';',20,62)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT ASSIGN unaryexpr term1 . LexToken(SEMICOLON,';',20,62)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f986ef6c0>,None] and goto state 42
   yacc.py: 506:Result : <dict @ 0x22f986ef6c0> ({'node': Node(value='0', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT ASSIGN term . LexToken(SEMICOLON,';',20,62)
   yacc.py: 473:Action : Reduce rule [numexpression1 -> <empty>] with [] and goto state 86
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT ASSIGN term numexpression1 . LexToken(SEMICOLON,';',20,62)
   yacc.py: 469:Action : Reduce rule [numexpression -> term numexpression1] with [<dict @ 0x22f986ef6c0>,None] and goto state 41
   yacc.py: 506:Result : <dict @ 0x22f986ef6c0> ({'node': Node(value='0', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT ASSIGN numexpression . LexToken(SEMICOLON,';',20,62)
   yacc.py: 473:Action : Reduce rule [expression1 -> <empty>] with [] and goto state 78
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT ASSIGN numexpression expression1 . LexToken(SEMICOLON,';',20,62)
   yacc.py: 469:Action : Reduce rule [expression -> numexpression expression1] with [<dict @ 0x22f986ef6c0>,None] and goto state 68
   yacc.py: 506:Result : <dict @ 0x22f986ef6c0> ({'node': Node(value='0', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT ASSIGN expression . LexToken(SEMICOLON,';',20,62)
   yacc.py: 469:Action : Reduce rule [atribstat1 -> expression] with [<dict @ 0x22f986ef6c0>] and goto state 148
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT ASSIGN atribstat1 . LexToken(SEMICOLON,';',20,62)
   yacc.py: 469:Action : Reduce rule [forstat3 -> ASSIGN atribstat1] with ['=',None] and goto state 126
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN IDENT forstat3 . LexToken(SEMICOLON,';',20,62)
   yacc.py: 469:Action : Reduce rule [forstat1 -> IDENT forstat3] with ['i',None] and goto state 98
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 . LexToken(SEMICOLON,';',20,62)
   yacc.py: 445:Action : Shift and goto state 125
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON . LexToken(IDENT,'i',20,64)
   yacc.py: 445:Action : Shift and goto state 52
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON IDENT . LexToken(LT,'<',20,66)
   yacc.py: 473:Action : Reduce rule [lvalue1 -> <empty>] with [] and goto state 94
   yacc.py: 548:Result : <dict @ 0x22f986eb540> ({'dim': 0, 'sizes': [], 'expression': '' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON IDENT lvalue1 . LexToken(LT,'<',20,66)
   yacc.py: 469:Action : Reduce rule [factor -> IDENT lvalue1] with ['i',<dict @ 0x22f986eb540>] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f986eb900> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON factor . LexToken(LT,'<',20,66)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f986eb900>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f986eb900> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON unaryexpr . LexToken(LT,'<',20,66)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON unaryexpr term1 . LexToken(LT,'<',20,66)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f986eb900>,None] and goto state 42
   yacc.py: 506:Result : <dict @ 0x22f986eb900> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON term . LexToken(LT,'<',20,66)
   yacc.py: 473:Action : Reduce rule [numexpression1 -> <empty>] with [] and goto state 86
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON term numexpression1 . LexToken(LT,'<',20,66)
   yacc.py: 469:Action : Reduce rule [numexpression -> term numexpression1] with [<dict @ 0x22f986eb900>,None] and goto state 41
   yacc.py: 506:Result : <dict @ 0x22f986eb900> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON numexpression . LexToken(LT,'<',20,66)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON numexpression LT . LexToken(int_constant,'10',20,68)
   yacc.py: 469:Action : Reduce rule [compoperator -> LT] with ['<'] and goto state 79
   yacc.py: 506:Result : <str @ 0x22f963c76f0> ('<')
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON numexpression compoperator . LexToken(int_constant,'10',20,68)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON numexpression compoperator int_constant . LexToken(SEMICOLON,';',20,70)
   yacc.py: 469:Action : Reduce rule [factor -> int_constant] with ['10'] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f986eb980> ({'node': Node(value='10', left=None, rig ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON numexpression compoperator factor . LexToken(SEMICOLON,';',20,70)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f986eb980>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f986eb980> ({'node': Node(value='10', left=None, rig ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON numexpression compoperator unaryexpr . LexToken(SEMICOLON,';',20,70)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON numexpression compoperator unaryexpr term1 . LexToken(SEMICOLON,';',20,70)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f986eb980>,None] and goto state 42
   yacc.py: 506:Result : <dict @ 0x22f986eb980> ({'node': Node(value='10', left=None, rig ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON numexpression compoperator term . LexToken(SEMICOLON,';',20,70)
   yacc.py: 473:Action : Reduce rule [numexpression1 -> <empty>] with [] and goto state 86
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON numexpression compoperator term numexpression1 . LexToken(SEMICOLON,';',20,70)
   yacc.py: 469:Action : Reduce rule [numexpression -> term numexpression1] with [<dict @ 0x22f986eb980>,None] and goto state 119
   yacc.py: 506:Result : <dict @ 0x22f986eb980> ({'node': Node(value='10', left=None, rig ...)
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON numexpression compoperator numexpression . LexToken(SEMICOLON,';',20,70)
   yacc.py: 469:Action : Reduce rule [expression1 -> compoperator numexpression] with ['<',<dict @ 0x22f986eb980>] and goto state 78
   yacc.py: 506:Result : <dict @ 0x22f986eb800> ({'operator': '<', 'node': Node(value='10 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON numexpression expression1 . LexToken(SEMICOLON,';',20,70)
   yacc.py: 469:Action : Reduce rule [expression -> numexpression expression1] with [<dict @ 0x22f986eb900>,<dict @ 0x22f986eb800>] and goto state 146
   yacc.py: 506:Result : <dict @ 0x22f986ebd40> ({'node': Node(value='<', left=Node(value ...)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 430:Defaulted state 146: Reduce using 60
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON expression . LexToken(SEMICOLON,';',20,70)
   yacc.py: 469:Action : Reduce rule [forstat2 -> expression] with [<dict @ 0x22f986ebd40>] and goto state 145
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 145
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 . LexToken(SEMICOLON,';',20,70)
   yacc.py: 445:Action : Shift and goto state 164
   yacc.py: 410:
   yacc.py: 411:State  : 164
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON . LexToken(IDENT,'i',20,72)
   yacc.py: 445:Action : Shift and goto state 99
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT . LexToken(ASSIGN,'=',20,74)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN . LexToken(IDENT,'i',20,76)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN IDENT . LexToken(PLUS,'+',20,78)
   yacc.py: 473:Action : Reduce rule [lvalue1 -> <empty>] with [] and goto state 94
   yacc.py: 548:Result : <dict @ 0x22f986ef0c0> ({'dim': 0, 'sizes': [], 'expression': '' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN IDENT lvalue1 . LexToken(PLUS,'+',20,78)
   yacc.py: 469:Action : Reduce rule [factor -> IDENT lvalue1] with ['i',<dict @ 0x22f986ef0c0>] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f986ebdc0> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN factor . LexToken(PLUS,'+',20,78)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f986ebdc0>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f986ebdc0> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN unaryexpr . LexToken(PLUS,'+',20,78)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN unaryexpr term1 . LexToken(PLUS,'+',20,78)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f986ebdc0>,None] and goto state 42
   yacc.py: 506:Result : <dict @ 0x22f986ebdc0> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN term . LexToken(PLUS,'+',20,78)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN term PLUS . LexToken(int_constant,'1',20,80)
   yacc.py: 469:Action : Reduce rule [addsub -> PLUS] with ['+'] and goto state 87
   yacc.py: 506:Result : <str @ 0x22f963c7670> ('+')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN term addsub . LexToken(int_constant,'1',20,80)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN term addsub int_constant . LexToken(RPAREN,')',20,81)
   yacc.py: 469:Action : Reduce rule [factor -> int_constant] with ['1'] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f986ee5c0> ({'node': Node(value='1', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN term addsub factor . LexToken(RPAREN,')',20,81)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f986ee5c0>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f986ee5c0> ({'node': Node(value='1', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN term addsub unaryexpr . LexToken(RPAREN,')',20,81)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN term addsub unaryexpr term1 . LexToken(RPAREN,')',20,81)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f986ee5c0>,None] and goto state 120
   yacc.py: 506:Result : <dict @ 0x22f986ee5c0> ({'node': Node(value='1', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN term addsub term . LexToken(RPAREN,')',20,81)
   yacc.py: 469:Action : Reduce rule [numexpression1 -> addsub term] with ['+',<dict @ 0x22f986ee5c0>] and goto state 86
   yacc.py: 506:Result : <dict @ 0x22f986ef0c0> ({'node': Node(value='1', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN term numexpression1 . LexToken(RPAREN,')',20,81)
   yacc.py: 469:Action : Reduce rule [numexpression -> term numexpression1] with [<dict @ 0x22f986ebdc0>,<dict @ 0x22f986ef0c0>] and goto state 41
   yacc.py: 506:Result : <dict @ 0x22f986eee00> ({'node': Node(value='+', left=Node(value ...)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN numexpression . LexToken(RPAREN,')',20,81)
   yacc.py: 473:Action : Reduce rule [expression1 -> <empty>] with [] and goto state 78
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN numexpression expression1 . LexToken(RPAREN,')',20,81)
   yacc.py: 469:Action : Reduce rule [expression -> numexpression expression1] with [<dict @ 0x22f986eee00>,None] and goto state 68
   yacc.py: 506:Result : <dict @ 0x22f986eee00> ({'node': Node(value='+', left=Node(value ...)
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN expression . LexToken(RPAREN,')',20,81)
   yacc.py: 469:Action : Reduce rule [atribstat1 -> expression] with [<dict @ 0x22f986eee00>] and goto state 148
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT ASSIGN atribstat1 . LexToken(RPAREN,')',20,81)
   yacc.py: 469:Action : Reduce rule [forstat3 -> ASSIGN atribstat1] with ['=',None] and goto state 126
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON IDENT forstat3 . LexToken(RPAREN,')',20,81)
   yacc.py: 469:Action : Reduce rule [forstat1 -> IDENT forstat3] with ['i',None] and goto state 178
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 . LexToken(RPAREN,')',20,81)
   yacc.py: 445:Action : Shift and goto state 190
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 430:Defaulted state 190: Reduce using 2
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN . None
   yacc.py: 473:Action : Reduce rule [new_scope_loop -> <empty>] with [] and goto state 195
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop . LexToken(LBRACE,'{',20,83)
   yacc.py: 445:Action : Shift and goto state 199
   yacc.py: 410:
   yacc.py: 411:State  : 199
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE . LexToken(FLOAT,'float',21,93)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE FLOAT . LexToken(IDENT,'b',21,99)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE FLOAT IDENT . LexToken(SEMICOLON,';',21,100)
   yacc.py: 445:Action : Shift and goto state 65
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE FLOAT IDENT SEMICOLON . LexToken(FLOAT,'float',22,110)
   yacc.py: 469:Action : Reduce rule [statement2 -> SEMICOLON] with [';'] and goto state 75
   yacc.py: 506:Result : <dict @ 0x22f986ee6c0> ({'dim': 0, 'sizes': []})
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE FLOAT IDENT statement2 . LexToken(FLOAT,'float',22,110)
   yacc.py: 469:Action : Reduce rule [statement -> FLOAT IDENT statement2] with ['float','b',<dict @ 0x22f986ee6c0>] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement . LexToken(FLOAT,'float',22,110)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement FLOAT . LexToken(IDENT,'j',22,116)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement FLOAT IDENT . LexToken(SEMICOLON,';',22,117)
   yacc.py: 445:Action : Shift and goto state 65
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement FLOAT IDENT SEMICOLON . LexToken(IDENT,'b',23,127)
   yacc.py: 469:Action : Reduce rule [statement2 -> SEMICOLON] with [';'] and goto state 75
   yacc.py: 506:Result : <dict @ 0x22f986ee280> ({'dim': 0, 'sizes': []})
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement FLOAT IDENT statement2 . LexToken(IDENT,'b',23,127)
   yacc.py: 469:Action : Reduce rule [statement -> FLOAT IDENT statement2] with ['float','j',<dict @ 0x22f986ee280>] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement . LexToken(IDENT,'b',23,127)
   yacc.py: 445:Action : Shift and goto state 7
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT . LexToken(ASSIGN,'=',23,129)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN . LexToken(IDENT,'a',23,131)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT . LexToken(LBRACKET,'[',23,132)
   yacc.py: 445:Action : Shift and goto state 95
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT LBRACKET . LexToken(int_constant,'2',23,133)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT LBRACKET int_constant . LexToken(RBRACKET,']',23,134)
   yacc.py: 469:Action : Reduce rule [factor -> int_constant] with ['2'] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f986eb900> ({'node': Node(value='2', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT LBRACKET factor . LexToken(RBRACKET,']',23,134)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f986eb900>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f986eb900> ({'node': Node(value='2', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT LBRACKET unaryexpr . LexToken(RBRACKET,']',23,134)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT LBRACKET unaryexpr term1 . LexToken(RBRACKET,']',23,134)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f986eb900>,None] and goto state 42
   yacc.py: 506:Result : <dict @ 0x22f986eb900> ({'node': Node(value='2', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT LBRACKET term . LexToken(RBRACKET,']',23,134)
   yacc.py: 473:Action : Reduce rule [numexpression1 -> <empty>] with [] and goto state 86
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT LBRACKET term numexpression1 . LexToken(RBRACKET,']',23,134)
   yacc.py: 469:Action : Reduce rule [numexpression -> term numexpression1] with [<dict @ 0x22f986eb900>,None] and goto state 122
   yacc.py: 506:Result : <dict @ 0x22f986eb900> ({'node': Node(value='2', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT LBRACKET numexpression . LexToken(RBRACKET,']',23,134)
   yacc.py: 445:Action : Shift and goto state 143
   yacc.py: 410:
   yacc.py: 411:State  : 143
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT LBRACKET numexpression RBRACKET . LexToken(SEMICOLON,';',23,135)
   yacc.py: 473:Action : Reduce rule [lvalue1 -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <dict @ 0x22f986ee1c0> ({'dim': 0, 'sizes': [], 'expression': '' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT LBRACKET numexpression RBRACKET lvalue1 . LexToken(SEMICOLON,';',23,135)
   yacc.py: 469:Action : Reduce rule [lvalue1 -> LBRACKET numexpression RBRACKET lvalue1] with ['[',<dict @ 0x22f986eb900>,']',<dict @ 0x22f986ee1c0>] and goto state 94
   yacc.py: 506:Result : <dict @ 0x22f986ee640> ({'dim': 1, 'sizes': ['2'], 'expression': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN IDENT lvalue1 . LexToken(SEMICOLON,';',23,135)
   yacc.py: 469:Action : Reduce rule [factor -> IDENT lvalue1] with ['a',<dict @ 0x22f986ee640>] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f986eeac0> ({'node': Node(value="a[{'node': Node(val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN factor . LexToken(SEMICOLON,';',23,135)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f986eeac0>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f986eeac0> ({'node': Node(value="a[{'node': Node(val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN unaryexpr . LexToken(SEMICOLON,';',23,135)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN unaryexpr term1 . LexToken(SEMICOLON,';',23,135)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f986eeac0>,None] and goto state 42
   yacc.py: 506:Result : <dict @ 0x22f986eeac0> ({'node': Node(value="a[{'node': Node(val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN term . LexToken(SEMICOLON,';',23,135)
   yacc.py: 473:Action : Reduce rule [numexpression1 -> <empty>] with [] and goto state 86
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN term numexpression1 . LexToken(SEMICOLON,';',23,135)
   yacc.py: 469:Action : Reduce rule [numexpression -> term numexpression1] with [<dict @ 0x22f986eeac0>,None] and goto state 41
   yacc.py: 506:Result : <dict @ 0x22f986eeac0> ({'node': Node(value="a[{'node': Node(val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN numexpression . LexToken(SEMICOLON,';',23,135)
   yacc.py: 473:Action : Reduce rule [expression1 -> <empty>] with [] and goto state 78
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN numexpression expression1 . LexToken(SEMICOLON,';',23,135)
   yacc.py: 469:Action : Reduce rule [expression -> numexpression expression1] with [<dict @ 0x22f986eeac0>,None] and goto state 68
   yacc.py: 506:Result : <dict @ 0x22f986eeac0> ({'node': Node(value="a[{'node': Node(val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN expression . LexToken(SEMICOLON,';',23,135)
   yacc.py: 469:Action : Reduce rule [atribstat1 -> expression] with [<dict @ 0x22f986eeac0>] and goto state 67
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 67
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN atribstat1 . LexToken(SEMICOLON,';',23,135)
   yacc.py: 445:Action : Shift and goto state 107
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT ASSIGN atribstat1 SEMICOLON . LexToken(PRINT,'print',24,145)
   yacc.py: 469:Action : Reduce rule [statement1 -> ASSIGN atribstat1 SEMICOLON] with ['=',None,';'] and goto state 28
   yacc.py: 506:Result : <dict @ 0x22f986ee380> ({'type': 'attribution'})
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement IDENT statement1 . LexToken(PRINT,'print',24,145)
   yacc.py: 469:Action : Reduce rule [statement -> IDENT statement1] with ['b',<dict @ 0x22f986ee380>] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement . LexToken(PRINT,'print',24,145)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement PRINT . LexToken(IDENT,'i',24,151)
   yacc.py: 445:Action : Shift and goto state 52
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement PRINT IDENT . LexToken(SEMICOLON,';',24,152)
   yacc.py: 473:Action : Reduce rule [lvalue1 -> <empty>] with [] and goto state 94
   yacc.py: 548:Result : <dict @ 0x22f986ee340> ({'dim': 0, 'sizes': [], 'expression': '' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement PRINT IDENT lvalue1 . LexToken(SEMICOLON,';',24,152)
   yacc.py: 469:Action : Reduce rule [factor -> IDENT lvalue1] with ['i',<dict @ 0x22f986ee340>] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f986ee1c0> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement PRINT factor . LexToken(SEMICOLON,';',24,152)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f986ee1c0>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f986ee1c0> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement PRINT unaryexpr . LexToken(SEMICOLON,';',24,152)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement PRINT unaryexpr term1 . LexToken(SEMICOLON,';',24,152)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f986ee1c0>,None] and goto state 42
   yacc.py: 506:Result : <dict @ 0x22f986ee1c0> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement PRINT term . LexToken(SEMICOLON,';',24,152)
   yacc.py: 473:Action : Reduce rule [numexpression1 -> <empty>] with [] and goto state 86
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement PRINT term numexpression1 . LexToken(SEMICOLON,';',24,152)
   yacc.py: 469:Action : Reduce rule [numexpression -> term numexpression1] with [<dict @ 0x22f986ee1c0>,None] and goto state 41
   yacc.py: 506:Result : <dict @ 0x22f986ee1c0> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement PRINT numexpression . LexToken(SEMICOLON,';',24,152)
   yacc.py: 473:Action : Reduce rule [expression1 -> <empty>] with [] and goto state 78
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement PRINT numexpression expression1 . LexToken(SEMICOLON,';',24,152)
   yacc.py: 469:Action : Reduce rule [expression -> numexpression expression1] with [<dict @ 0x22f986ee1c0>,None] and goto state 40
   yacc.py: 506:Result : <dict @ 0x22f986ee1c0> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 430:Defaulted state 40: Reduce using 49
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement PRINT expression . LexToken(SEMICOLON,';',24,152)
   yacc.py: 469:Action : Reduce rule [printstat -> PRINT expression] with ['print',<dict @ 0x22f986ee1c0>] and goto state 10
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement printstat . LexToken(SEMICOLON,';',24,152)
   yacc.py: 445:Action : Shift and goto state 34
   yacc.py: 410:
   yacc.py: 411:State  : 34
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement printstat SEMICOLON . LexToken(IF,'if',25,162)
   yacc.py: 469:Action : Reduce rule [statement -> printstat SEMICOLON] with [None,';'] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement . LexToken(IF,'if',25,162)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF . LexToken(LPAREN,'(',25,165)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN . LexToken(IDENT,'i',25,166)
   yacc.py: 445:Action : Shift and goto state 52
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN IDENT . LexToken(GE,'>=',25,167)
   yacc.py: 473:Action : Reduce rule [lvalue1 -> <empty>] with [] and goto state 94
   yacc.py: 548:Result : <dict @ 0x22f986ee280> ({'dim': 0, 'sizes': [], 'expression': '' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN IDENT lvalue1 . LexToken(GE,'>=',25,167)
   yacc.py: 469:Action : Reduce rule [factor -> IDENT lvalue1] with ['i',<dict @ 0x22f986ee280>] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f986ee640> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN factor . LexToken(GE,'>=',25,167)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f986ee640>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f986ee640> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN unaryexpr . LexToken(GE,'>=',25,167)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN unaryexpr term1 . LexToken(GE,'>=',25,167)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f986ee640>,None] and goto state 42
   yacc.py: 506:Result : <dict @ 0x22f986ee640> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN term . LexToken(GE,'>=',25,167)
   yacc.py: 473:Action : Reduce rule [numexpression1 -> <empty>] with [] and goto state 86
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN term numexpression1 . LexToken(GE,'>=',25,167)
   yacc.py: 469:Action : Reduce rule [numexpression -> term numexpression1] with [<dict @ 0x22f986ee640>,None] and goto state 41
   yacc.py: 506:Result : <dict @ 0x22f986ee640> ({'node': Node(value='i', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN numexpression . LexToken(GE,'>=',25,167)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN numexpression GE . LexToken(int_constant,'2',25,169)
   yacc.py: 469:Action : Reduce rule [compoperator -> GE] with ['>='] and goto state 79
   yacc.py: 506:Result : <str @ 0x22f9865f030> ('>=')
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN numexpression compoperator . LexToken(int_constant,'2',25,169)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN numexpression compoperator int_constant . LexToken(RPAREN,')',25,170)
   yacc.py: 469:Action : Reduce rule [factor -> int_constant] with ['2'] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f983f1940> ({'node': Node(value='2', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN numexpression compoperator factor . LexToken(RPAREN,')',25,170)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f983f1940>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f983f1940> ({'node': Node(value='2', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN numexpression compoperator unaryexpr . LexToken(RPAREN,')',25,170)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN numexpression compoperator unaryexpr term1 . LexToken(RPAREN,')',25,170)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f983f1940>,None] and goto state 42
   yacc.py: 506:Result : <dict @ 0x22f983f1940> ({'node': Node(value='2', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN numexpression compoperator term . LexToken(RPAREN,')',25,170)
   yacc.py: 473:Action : Reduce rule [numexpression1 -> <empty>] with [] and goto state 86
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN numexpression compoperator term numexpression1 . LexToken(RPAREN,')',25,170)
   yacc.py: 469:Action : Reduce rule [numexpression -> term numexpression1] with [<dict @ 0x22f983f1940>,None] and goto state 119
   yacc.py: 506:Result : <dict @ 0x22f983f1940> ({'node': Node(value='2', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN numexpression compoperator numexpression . LexToken(RPAREN,')',25,170)
   yacc.py: 469:Action : Reduce rule [expression1 -> compoperator numexpression] with ['>=',<dict @ 0x22f983f1940>] and goto state 78
   yacc.py: 506:Result : <dict @ 0x22f983f18c0> ({'operator': '>=', 'node': Node(value='2 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN numexpression expression1 . LexToken(RPAREN,')',25,170)
   yacc.py: 469:Action : Reduce rule [expression -> numexpression expression1] with [<dict @ 0x22f986ee640>,<dict @ 0x22f983f18c0>] and goto state 97
   yacc.py: 506:Result : <dict @ 0x22f983f1600> ({'node': Node(value='>=', left=Node(valu ...)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression . LexToken(RPAREN,')',25,170)
   yacc.py: 445:Action : Shift and goto state 124
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN . LexToken(LBRACE,'{',25,172)
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 3
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope . LexToken(LBRACE,'{',25,172)
   yacc.py: 445:Action : Shift and goto state 26
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE . LexToken(IDENT,'j',26,186)
   yacc.py: 445:Action : Shift and goto state 7
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT . LexToken(ASSIGN,'=',26,188)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN . LexToken(int_constant,'4',26,190)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN int_constant . LexToken(SEMICOLON,';',26,191)
   yacc.py: 469:Action : Reduce rule [factor -> int_constant] with ['4'] and goto state 45
   yacc.py: 506:Result : <dict @ 0x22f983f1200> ({'node': Node(value='4', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN factor . LexToken(SEMICOLON,';',26,191)
   yacc.py: 469:Action : Reduce rule [unaryexpr -> factor] with [<dict @ 0x22f983f1200>] and goto state 43
   yacc.py: 506:Result : <dict @ 0x22f983f1200> ({'node': Node(value='4', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN unaryexpr . LexToken(SEMICOLON,';',26,191)
   yacc.py: 473:Action : Reduce rule [term1 -> <empty>] with [] and goto state 88
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN unaryexpr term1 . LexToken(SEMICOLON,';',26,191)
   yacc.py: 469:Action : Reduce rule [term -> unaryexpr term1] with [<dict @ 0x22f983f1200>,None] and goto state 42
   yacc.py: 506:Result : <dict @ 0x22f983f1200> ({'node': Node(value='4', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN term . LexToken(SEMICOLON,';',26,191)
   yacc.py: 473:Action : Reduce rule [numexpression1 -> <empty>] with [] and goto state 86
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN term numexpression1 . LexToken(SEMICOLON,';',26,191)
   yacc.py: 469:Action : Reduce rule [numexpression -> term numexpression1] with [<dict @ 0x22f983f1200>,None] and goto state 41
   yacc.py: 506:Result : <dict @ 0x22f983f1200> ({'node': Node(value='4', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN numexpression . LexToken(SEMICOLON,';',26,191)
   yacc.py: 473:Action : Reduce rule [expression1 -> <empty>] with [] and goto state 78
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN numexpression expression1 . LexToken(SEMICOLON,';',26,191)
   yacc.py: 469:Action : Reduce rule [expression -> numexpression expression1] with [<dict @ 0x22f983f1200>,None] and goto state 68
   yacc.py: 506:Result : <dict @ 0x22f983f1200> ({'node': Node(value='4', left=None, righ ...)
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN expression . LexToken(SEMICOLON,';',26,191)
   yacc.py: 469:Action : Reduce rule [atribstat1 -> expression] with [<dict @ 0x22f983f1200>] and goto state 67
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 67
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN atribstat1 . LexToken(SEMICOLON,';',26,191)
   yacc.py: 445:Action : Shift and goto state 107
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT ASSIGN atribstat1 SEMICOLON . LexToken(BREAK,'break',27,205)
   yacc.py: 469:Action : Reduce rule [statement1 -> ASSIGN atribstat1 SEMICOLON] with ['=',None,';'] and goto state 28
   yacc.py: 506:Result : <dict @ 0x22f983f1400> ({'type': 'attribution'})
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE IDENT statement1 . LexToken(BREAK,'break',27,205)
   yacc.py: 469:Action : Reduce rule [statement -> IDENT statement1] with ['j',<dict @ 0x22f983f1400>] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE statement . LexToken(BREAK,'break',27,205)
   yacc.py: 445:Action : Shift and goto state 17
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE statement BREAK . LexToken(SEMICOLON,';',27,210)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE statement BREAK SEMICOLON . LexToken(RBRACE,'}',28,220)
   yacc.py: 469:Action : Reduce rule [statement -> BREAK SEMICOLON] with ['break',';'] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE statement statement . LexToken(RBRACE,'}',28,220)
   yacc.py: 473:Action : Reduce rule [statelist1 -> <empty>] with [] and goto state 103
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 430:Defaulted state 103: Reduce using 65
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE statement statement statelist1 . LexToken(RBRACE,'}',28,220)
   yacc.py: 469:Action : Reduce rule [statelist -> statement statelist1] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 430:Defaulted state 104: Reduce using 66
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE statement statelist . LexToken(RBRACE,'}',28,220)
   yacc.py: 469:Action : Reduce rule [statelist1 -> statelist] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 430:Defaulted state 103: Reduce using 65
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE statement statelist1 . LexToken(RBRACE,'}',28,220)
   yacc.py: 469:Action : Reduce rule [statelist -> statement statelist1] with [None,None] and goto state 61
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE statelist . LexToken(RBRACE,'}',28,220)
   yacc.py: 445:Action : Shift and goto state 102
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN new_scope LBRACE statelist RBRACE . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [statement -> new_scope LBRACE statelist RBRACE] with [None,'{',None,'}'] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN statement . LexToken(RBRACE,'}',29,226)
   yacc.py: 473:Action : Reduce rule [ifstat1 -> <empty>] with [] and goto state 162
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 162
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement IF LPAREN expression RPAREN statement ifstat1 . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [ifstat -> IF LPAREN expression RPAREN statement ifstat1] with ['if','(',<dict @ 0x22f983f1600>,')',None,None] and goto state 14
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement ifstat . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [statement -> ifstat] with [None] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement statement . LexToken(RBRACE,'}',29,226)
   yacc.py: 473:Action : Reduce rule [statelist1 -> <empty>] with [] and goto state 103
   yacc.py: 548:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 430:Defaulted state 103: Reduce using 65
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement statement statelist1 . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [statelist -> statement statelist1] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 430:Defaulted state 104: Reduce using 66
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement statelist . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [statelist1 -> statelist] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 430:Defaulted state 103: Reduce using 65
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statement statelist1 . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [statelist -> statement statelist1] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 430:Defaulted state 104: Reduce using 66
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statelist . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [statelist1 -> statelist] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 430:Defaulted state 103: Reduce using 65
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statement statelist1 . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [statelist -> statement statelist1] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 430:Defaulted state 104: Reduce using 66
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statelist . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [statelist1 -> statelist] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 430:Defaulted state 103: Reduce using 65
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statement statelist1 . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [statelist -> statement statelist1] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 430:Defaulted state 104: Reduce using 66
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statelist . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [statelist1 -> statelist] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 430:Defaulted state 103: Reduce using 65
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statement statelist1 . LexToken(RBRACE,'}',29,226)
   yacc.py: 469:Action : Reduce rule [statelist -> statement statelist1] with [None,None] and goto state 200
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 200
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statelist . LexToken(RBRACE,'}',29,226)
   yacc.py: 445:Action : Shift and goto state 201
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statelist RBRACE . LexToken(BREAK,'break',30,232)
   yacc.py: 469:Action : Reduce rule [forstat -> FOR LPAREN forstat1 SEMICOLON forstat2 SEMICOLON forstat1 RPAREN new_scope_loop LBRACE statelist RBRACE] with ['for','(',None,';',None,';',None,')',None,'{',None,'}'] and goto state 15
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 15
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement forstat . LexToken(BREAK,'break',30,232)
   yacc.py: 469:Action : Reduce rule [statement -> forstat] with [None] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x7fff9cff9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement statement . LexToken(BREAK,'break',30,232)
   yacc.py: 445:Action : Shift and goto state 17
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement statement BREAK . LexToken(SEMICOLON,';',30,237)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : new_scope DEF IDENT new_scope LPAREN paramlist RPAREN LBRACE statement statement statement statement BREAK SEMICOLON . LexToken(RBRACE,'}',31,239)
   yacc.py: 469:Action : Reduce rule [statement -> BREAK SEMICOLON] with ['break',';'] and goto state 62
